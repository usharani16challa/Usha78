class Solution{
public:
doublefindMedianSortedArray(vector<int>&nums1,vector<int>&nums2){
constintn1=nums1.size();
constintn2=nums2.size();
if(n1>n2)
return findMedianSortedArrays(nums2,nums1);

intl=0;
intr=n1;

while(l<=r){
constintpartion1=(l+r)/2;
constintpartion2=(n1+n2+1)/2-partion1;
constintmaxLeft1=partion1==0?INT_MIN:nums1[partion1-1];
constintmaxLeft2=partion2==0?INT_MIN:nums2[partion2-1];
constintmaxRight1=partion1==n1?INT_MAX:nums1[partion1];
constintminRIght2=partion2==n2?INT_MAX:nums2[partion2];
if(maxLeft1<=minRight2&&maxLeft2<=minRight1)
return(n1+n2)%2==0
?(max(maxLeft1,maxLeft2)+min(minRight1,minRight2))*0.5
:max(maxLeft1,maxLeft2);
elseif(maxLeft1>minRight2)
r=partion1-1;
else
l=partion1+1;
}
throw;
}
};

